?spline
data(mtcars)
kin <- mtcars
View()
View()
View(kin)
x <- kin$mpg
y <- kin$cyl
y
x
smooth.spline(x,y)
smooth.spline(x,y,3)
smooth.spline(x,y,n=3)
smooth.spline(x,y,n=4)
spline(x,y,n=3)
spline(x,y,n=4)
smooth.spline(x,y,n=4,methods = "fmm")
spline(x,y,n=4,method = "fmm")
Wage
View(mtcars)
view(mtcars$cyl)
mtcars$cyl
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(mpg ~ bs(cyl,knots = c(4,6,10)),data = mtcars )
summary(fit)
#3 cutpoints at ages 25 ,50 ,60
fit<-lm(mpg ~ bs(cyl,knots = c(4,6,10)),data = mtcars )
summary(fit)
#3 cutpoints at ages 25 ,50 ,60
install.packages("splines")
library(splines)
fit<-lm(mpg ~ bs(cyl,knots = c(4,6,10)),data = mtcars )
summary(fit)
fit<-lm(mpg ~ bs(cyl,knots = c(4)),data = mtcars )
summary(fit)
kin$cyl
kin$cyl
fit<-lm(mpg ~ bs(cyl,knots = c(2)),data = mtcars )
summary(fit)
require(splines)
#ISLR contains the Dataset
require(ISLR)
#ISLR contains the Dataset
install.packages("ISLR")
require(ISLR)
attach(Wage)
agelims<-range(age)
age
fit<-lm(wage ~ bs(age,knots = c(25),data = Wage )
)
fit<-lm(wage ~ bs(age,knots = c(25)),data = Wage )
summary(fit)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
agelims<-range(age)
#Generating Test Data
age.grid<-seq(from=agelims[1], to = agelims[2])
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25),lty=2,col="darkgreen")
fit<-lm(wage ~ bs(age,knots = c(25,40)),data = Wage )
summary(fit)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40),lty=2,col="darkgreen")
fit<-lm(wage ~ bs(age,knots = c(25,40,70)),data = Wage )
summary(fit)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,70),lty=2,col="darkgreen")
fit<-lm(wage ~ bs(age,knots = c(25,40,70)),data = Wage )
summary(fit)
fit_1<-lm(wage ~ bs(age,knots = c(25,50)),data = Wage )
summary(fit_1)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
points(age.grid,predict(fit_1,newdata = list(age=age.grid)),col="darkblue",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,50,,70),lty=2,col="darkgreen")
#adding cutpoints
abline(v=c(25,40,50,70),lty=2,col="darkgreen")
fit<-lm(wage ~ bs(age,knots = c(25,40,70)),data = Wage )
summary(fit)
fit_1<-lm(wage ~ bs(age,knots = c(25)),data = Wage )
summary(fit_1)
plot(age,wage,col="grey",xlab="Age",ylab="Wages")
points(age.grid,predict(fit,newdata = list(age=age.grid)),col="darkgreen",lwd=2,type="l")
points(age.grid,predict(fit_1,newdata = list(age=age.grid)),col="darkblue",lwd=2,type="l")
#adding cutpoints
abline(v=c(25,40,70),lty=2,col="darkgreen")
install.packages("dplyr")
install.packages("Rtools")
version
library(data.table)
library(dplyr)
data <- fread("D:/Job Work/test.csv")
one_tier <- function(data,inp_1,inp_2)
{
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay-inp_1 > inp_2) ~ Estimated_Copay-inp_2,
(Estimated_Copay > inp_1 & Estimated_Copay-inp_1 <= inp_2) ~ inp_1,
TRUE ~ 0)))
return(data)
}
final <- one_tier_res(data,10,150)
final <- one_tier(data,10,150)
colnames(data)[2] <- "Estimated_Copay"
data$Estimated_Copay <- as.numeric(data$Estimated_Copay)
final <- one_tier(data,10,150)
final$mk_pay <- ifelse(final$result == 0, 0 ,
final$Estimated_Copay- final$result)
View(final)
shiny::runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
library(data.table)
library(dplyr)
data <- fread("D:/Job Work/test.csv")
colnames(data)[2] <- "Estimated_Copay"
data$Estimated_Copay <- as.numeric(data$Estimated_Copay)
one_tier_res <- function(data,inp_1,inp_2,inp_3,inp_4)
{
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay > inp_4) ~ Estimated_Copay,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay == inp_1) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
fin <- one_tier_res(data,5,150,30,200)
calc_copay <- one_tier_res(data,5,150,30,200)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
View(calc_copay)
one_tier <- function(data,inp_1,inp_2){
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay-inp_1 > inp_2) ~ Estimated_Copay-inp_2,
(Estimated_Copay > inp_1 & Estimated_Copay-inp_1 <= inp_2) ~ inp_1,
(Estimated_Copay == inp_1) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
calc_copay <- one_tier(data,5,150)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
View(calc_copay)
runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
two_tier_res <- function(data,inp_1,inp_2,inp_3,inp_4,inp_5,inp_6,inp_7,inp_8){
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
inp_6 <- ifelse(inp_6=="",10000000,inp_6)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay >= inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 <= inp_6 & Estimated_Copay <= inp_8 ) ~ inp_5,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 > inp_6 & Estimated_Copay <= inp_8 ) ~ Estimated_Copay-inp_6,
(Estimated_Copay > inp_8) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
two_tier_res(data,5,150,30,250,90,250,205,380)
fen <- two_tier_res(data,5,150,30,250,90,250,205,380)
View(fen)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
View(calc_copay)
two_tier_res <- function(data,inp_1,inp_2,inp_3,inp_4,inp_5,inp_6,inp_7,inp_8){
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
inp_6 <- ifelse(inp_6=="",10000000,inp_6)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay >= inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 <= inp_6 & Estimated_Copay <= inp_8 ) ~ inp_5,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 > inp_6 & Estimated_Copay <= inp_8 ) ~ Estimated_Copay-inp_6,
(Estimated_Copay > inp_8) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
inp_1 <- 5
inp_1 <- 5
inp_1 <- 5
inp_2 <- 150
inp_3 <- 30
inp_4 <- 250
inp_5 <- 90
inp_6 <- 250
inp_7 <- 205
inp_8 <- 390
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
inp_6 <- ifelse(inp_6=="",10000000,inp_6)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay >= inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 <= inp_6 & Estimated_Copay <= inp_8 ) ~ inp_5,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 > inp_6 & Estimated_Copay <= inp_8 ) ~ Estimated_Copay-inp_6,
(Estimated_Copay > inp_8) ~ Estimated_Copay,
TRUE ~ 0)))
View(data)
runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
two_tier_res <- function(data,inp_1,inp_2,inp_3,inp_4,inp_5,inp_6,inp_7,inp_8){
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
inp_6 <- ifelse(inp_6=="",10000000,inp_6)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay >= inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 <= inp_6 & Estimated_Copay <= inp_8 ) ~ inp_5,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 > inp_6 & Estimated_Copay <= inp_8 ) ~ Estimated_Copay-inp_6,
(Estimated_Copay > inp_8) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
calc_copay <- two_tier_res(data,5,150,30,250,75,270,255,380)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
View(calc_copay)
runApp('D:/Job Work/Merck Coupoun Effectivness Tool Project/R Shiny Codes/20191219')
two_tier_res <- function(data,inp_1,inp_2,inp_3,inp_4,inp_5,inp_6,inp_7,inp_8){
inp_2 <- ifelse(inp_2=="",10000000,inp_2)
inp_6 <- ifelse(inp_6=="",10000000,inp_6)
data <- data %>% mutate(.,result = with(.,case_when(
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 <= inp_2 & Estimated_Copay <= inp_4 ) ~ inp_1,
(Estimated_Copay > inp_1 & Estimated_Copay >= inp_3 & Estimated_Copay-inp_1 > inp_2 & Estimated_Copay <= inp_4 ) ~ Estimated_Copay-inp_2,
(Estimated_Copay >= inp_1 & Estimated_Copay < inp_3) ~ Estimated_Copay,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 <= inp_6 & Estimated_Copay <= inp_8 ) ~ inp_5,
(Estimated_Copay > inp_4 & Estimated_Copay-inp_5 > inp_6 & Estimated_Copay <= inp_8 ) ~ Estimated_Copay-inp_6,
(Estimated_Copay > inp_8) ~ Estimated_Copay,
TRUE ~ 0)))
return(data)
}
calc_copay <- two_tier_res(data,5,150,30,250,75,270,255,380)
calc_copay$mk_pay <- ifelse(calc_copay$result == 0, 0 ,
calc_copay$Estimated_Copay- calc_copay$result)
View(calc_copay)
shiny::runApp('C:/Users/Admin/Downloads/20200109')
runApp('D:/Job Work/Merck Coupon Effectivness Tool Project/R Shiny Codes/20200110')
runApp('D:/Job Work/Merck Coupon Effectivness Tool Project/R Shiny Codes/20200110')
install.packages('twitteR')
library(twitteR)
install.packages('rtweet')
library('rtweet')
api_key <- "1shzf8nDXnDoRaknC8oL4ixkY"
api_secret_key <- "ZzAQhrbzmMq2ysF2FklkzE4HjfFEuemQQqG4PkWWVkLVov3sZa"
access_token <- "165445886-NKf6bKU6yOmH5QBhHJlxNVbj7vVMqry8idwlshlr"
access_token_secret <- "Ka4wjEmGeMBFieNTHTxvVCBeYAMpHD3ztzaTFr8mKXYEg"
## authenticate via web browser
token <- create_token(
app = "Sharath A",
consumer_key = api_key,
consumer_secret = api_secret_key,
access_token = access_token,
access_secret = access_token_secret)
get_token()
rstats_tweets <- search_tweets(q = "#rstats",
n = 500)
View(rstats_tweets)
table(rstats_tweets$source)
unique(rstats_tweets$source)
rstats_tweets <- search_tweets(q = "#rstats")
rstats_tweets <- search_tweets(q = "#rstats", n=5000)
View(rstats_tweets)
rstats_tweets[,24]
rstats_tweets[24,]
rstats_tweets[24,]$text
rstats_tweets$hashtags
rstats_tweets[24,]$text
rstats_tweets[24,]$hashtags
rstats_tweets[24,]$urls_url
class(rstats_tweets$created_at)
rstats_tweets$created_at <- as.Date(rstats_tweets$created_at)
class(rstats_tweets$created_at)
sort(unique(rstats_tweets$created_at))
today()
Sys.time()
rstats_tweets <- search_tweets(q = "stelara", n=5000)
View(rstats_tweets)
rstats_tweets <- search_tweets(q = "#stelara", n=500)
?twitteR
??twitteR
rate_limit()
get_token()
rate_limit(get_tokens())
bin <- rate_limit(get_tokens())
View(bin)
searchTwitter("stelara", n=100)
getTwitterOAuth(api_key, api_secret_key)
?setup_twitter_oauth
setup_twitter_oauth(api_key, api_secret_key, access_token=access_token, access_secret=access_token_secret)
bin <- searchTwitter("stelara", n=100)
View(bin)
rstats_tweets <- search_tweets(q = "#govt", n=100)
View(rstats_tweets)
?`rtweet-package`
install.packages('Rfacebook')
library(Rfacebook)
app_id<-"sharath_0207"
app_secret <- EAAIXBIX9P4EBALrxyF6ZAXEPbHgVR6WdUhklgEWT7ac80sCpAxsUVg5vNynWhSIQKDLSf3M0V7g2ZAGo33psWnANo6KyR8misd8SZBfc5RZAttL5d4DbdAubZBH7zm4ZAk8LsZBG2x2RDRZCortx1cq39TW0BDsmDy29Op8JqyaZAx7l7K2MNLZC7IGOZBFcmOL2MRVquB8EIQXDh04hcJhMqv5pqvaqmRcErqGJu92WLrK7AZDZD"
fbOAuth(app_id, app_secret, extended_permissions = FALSE,legacy_permissions = FALSE, scope = NULL)
app_secret <- "EAAIXBIX9P4EBALrxyF6ZAXEPbHgVR6WdUhklgEWT7ac80sCpAxsUVg5vNynWhSIQKDLSf3M0V7g2ZAGo33psWnANo6KyR8misd8SZBfc5RZAttL5d4DbdAubZBH7zm4ZAk8LsZBG2x2RDRZCortx1cq39TW0BDsmDy29Op8JqyaZAx7l7K2MNLZC7IGOZBFcmOL2MRVquB8EIQXDh04hcJhMqv5pqvaqmRcErqGJu92WLrK7AZDZD"
app_id<-"sharath_0207"
app_secret <- "EAAIXBIX9P4EBALrxyF6ZAXEPbHgVR6WdUhklgEWT7ac80sCpAxsUVg5vNynWhSIQKDLSf3M0V7g2ZAGo33psWnANo6KyR8misd8SZBfc5RZAttL5d4DbdAubZBH7zm4ZAk8LsZBG2x2RDRZCortx1cq39TW0BDsmDy29Op8JqyaZAx7l7K2MNLZC7IGOZBFcmOL2MRVquB8EIQXDh04hcJhMqv5pqvaqmRcErqGJu92WLrK7AZDZD"
fbOAuth(app_id, app_secret, extended_permissions = FALSE,legacy_permissions = FALSE, scope = NULL)
app_id<-"sharath_0207"
app_secret <- "EAAIXBIX9P4EBAFYvm2esC6Hxffv499v8mxMosSG5iw2UmXvxjZBJMSaDK5AaCsnk7iI0eFwjAo556Hv7QJ7UwVtu2kozHk1yGAiaKKia76xMMxQQJGpWZCCtkG0ZCZARVGoLqPQ79x6ZCLUZBqzVm1cZB9lS2fnklP5rUtcjRCPTvqwaNcXoWTjywZBAtg9CdHwZD"
?fbOAuth
app_id<-"588258148695937"
app_secret <- "EAAIXBIX9P4EBAFYvm2esC6Hxffv499v8mxMosSG5iw2UmXvxjZBJMSaDK5AaCsnk7iI0eFwjAo556Hv7QJ7UwVtu2kozHk1yGAiaKKia76xMMxQQJGpWZCCtkG0ZCZARVGoLqPQ79x6ZCLUZBqzVm1cZB9lS2fnklP5rUtcjRCPTvqwaNcXoWTjywZBAtg9CdHwZD"
fbOAuth(app_id, app_secret, extended_permissions = FALSE,legacy_permissions = FALSE, scope = NULL)
fbOAuth(app_id, app_secret, extended_permissions = FALSE,legacy_permissions = FALSE, scope = NULL)
fbOAuth(app_id, app_secret, extended_permissions = FALSE,legacy_permissions = FALSE, scope = NULL)
fbOAuth(app_id, app_secret)
fbOAuth(app_id, app_secret)
fbOAuth(app_id, app_secret)
app_id<-"588258148695937"
app_secret <- "EAAIXBIX9P4EBAFYvm2esC6Hxffv499v8mxMosSG5iw2UmXvxjZBJMSaDK5AaCsnk7iI0eFwjAo556Hv7QJ7UwVtu2kozHk1yGAiaKKia76xMMxQQJGpWZCCtkG0ZCZARVGoLqPQ79x6ZCLUZBqzVm1cZB9lS2fnklP5rUtcjRCPTvqwaNcXoWTjywZBAtg9CdHwZD"
fbOAuth(app_id, app_secret)
fb_ouath <- fbOAuth(app_id, app_secret)
fb_ouath <- fbOAuth(app_id, app_secret)
fb_ouath <- fbOAuth(app_id, app_secret)
library(devtools)
install.packages("devtools")
library(devtools)
fb_ouath <- fbOAuth(app_id, app_secret,extended_permissions = TRUE)
fb_ouath <- fbOAuth(app_id, app_secret,extended_permissions = TRUE)
library(Rfacebook)
app_id<-"588258148695937"
app_secret <- "EAAIXBIX9P4EBAFYvm2esC6Hxffv499v8mxMosSG5iw2UmXvxjZBJMSaDK5AaCsnk7iI0eFwjAo556Hv7QJ7UwVtu2kozHk1yGAiaKKia76xMMxQQJGpWZCCtkG0ZCZARVGoLqPQ79x6ZCLUZBqzVm1cZB9lS2fnklP5rUtcjRCPTvqwaNcXoWTjywZBAtg9CdHwZD"
fb_ouath <- fbOAuth(app_id, app_secret,extended_permissions = TRUE)
library(dplyr)
setwd('D:/Job Work/BDSI MMx/1. Master data sets')
library(data.table)
#################### Analyze the Final Segement ################
dat <- readRDS("HCPFinalSegment.rds")
dat<- setDT(dat)
length(unique(dat$SymphonyID))
names(dat)
summm <- dat %>%
group_by(Tier1,Tier2) %>%
summarise(sum_trx = sum(LAOTRx), cnt= length(SymphonyID))
################## Analyze the Segmentation file #######
seg <- readRDS("HCPSegmentData.rds")
seg <- setDT(seg)
length(unique(seg$SymphonyID))
length(unique(seg[seg$AUFlag==1,]$SymphonyID))
sum(seg[seg$AUFlag==1,]$LAOTRx)
HCP_MSD <- readRDS("HCPMasterData.rds")
HCP_MSD <- setDT(HCP_MSD)
HCP_ZIP <- HCP_MSD[,c("SymphonyID","ZIP")]
HCP_ZIP <- unique(HCP_ZIP)
nrow(HCP_ZIP)
length(unique(HCP_ZIP$SymphonyID)
)
HCP_ZIP<-setDT(HCP_ZIP)
### Remove HCP IDs with
HCP_MSD <- HCP_MSD[complete.cases(HCP_MSD[,1])]
length(unique(HCP_MSD$SymphonyID))
### Replacing 0 values in NA values
HCP_MSD[is.na(HCP_MSD)] <- 0
HCP_MSD <- readRDS("HCPMasterData.rds")
HCP_MSD <- setDT(HCP_MSD)
HCP_ZIP <- HCP_MSD[,c("SymphonyID","ZIP")]
HCP_ZIP <- unique(HCP_ZIP)
nrow(HCP_ZIP)
length(unique(HCP_ZIP$SymphonyID))
HCP_ZIP<-setDT(HCP_ZIP)
### Remove HCP IDs with
HCP_MSD <- HCP_MSD[complete.cases(HCP_MSD[,1])]
length(unique(HCP_MSD$SymphonyID))
?complete.cases
HCP_MSD <- readRDS("HCPMasterData.rds")
length(unique(HCP_MSD$SymphonyID))
HCP_MSD <- readRDS("HCPMasterData.rds")
HCP_MSD <- setDT(HCP_MSD)
HCP_ZIP <- HCP_MSD[,c("SymphonyID","ZIP")]
HCP_ZIP <- unique(HCP_ZIP)
nrow(HCP_ZIP)
length(unique(HCP_ZIP$SymphonyID))
HCP_ZIP<-setDT(HCP_ZIP)
### Remove HCP IDs with
HCP_MSD <- HCP_MSD[complete.cases(HCP_MSD[,1])]
length(unique(HCP_MSD$SymphonyID))
### Replacing 0 values in NA values
HCP_MSD[is.na(HCP_MSD)] <- 0
### Creating Yearmonth column
str(HCP_MSD)
HCP_MSD$yearmonth <- as.numeric(paste0(year(HCP_MSD$Date),formatC(month(HCP_MSD$Date),width = 2,flag=0)))
sort(unique(HCP_MSD$yearmonth))
setkey(seg[,c("SymphonyID","AUFlag")],SymphonyID)
setkey(HCP_MSD,SymphonyID)
HCP_MSD_M <- HCP_MSD[seg[,c("SymphonyID","AUFlag")],nomatch=0]
HCP_MSD_M <- HCP_MSD_M[HCP_MSD_M$AUFlag ==1,]
#QC
length(unique(HCP_MSD_M[HCP_MSD_M$AUFlag ==1,]$SymphonyID))
setkey(HCP_MSD_M,SymphonyID)
setkey(dat,SymphonyID)
HCP_MSD_C <- HCP_MSD_M[dat[,c("SymphonyID","Tier1","Tier2")],nomatch=0]
mast_dat <- HCP_MSD_C %>%
group_by(Tier1,Tier2) %>%
summarise(HCP_cnt= length(unique(SymphonyID)),sum_trx = sum(TRx),
sum_PDE = sum(PDE), sum_P1 = sum(P1), sum_P2 = sum(P2),
sum_copay = sum(Copay), sum_PW = sum(PW),
sum_SP = sum(SpeakerEvent))
names(HCP_MSD_C)
mast_dat <- HCP_MSD_C %>%
group_by(Tier1,Tier2) %>%
summarise(HCP_cnt= length(unique(SymphonyID)),
sum_NRx = sum(NRx) ,sum_TRx = sum(TRx),
sum_BupMktNRx = sum(BupMktNRx) ,sum_BupMktTRx = sum(BupMktTRx),
sum_PDE = sum(PDE), sum_P1 = sum(P1), sum_P2 = sum(P2),
sum_copay = sum(Copay), sum_PW = sum(PW),
sum_SP = sum(SpeakerEvent))
fwrite(mast_dat,"Segment_leve_summary.csv")
View(HCP_MSD_C)
